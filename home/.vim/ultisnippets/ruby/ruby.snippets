snippet req "req"
require '${1}'$0
endsnippet

snippet case "case"
case ${1:object}
when ${2:condition}
	$0
end
endsnippet

snippet when "when"
when ${1:condition}
	$0
endsnippet

snippet def "def"
def ${1:method_name}
end
endsnippet

snippet if "if"
if ${1:condition}
end
endsnippet

snippet elsif "elsif"
elsif ${1:condition}
endsnippet

snippet unless "unless"
unless ${1:condition}
end
endsnippet

snippet while "while"
while ${1:condition}
end
endsnippet

snippet until "until"
until ${1:condition}
end
endsnippet

snippet cl "cl"
class ${1}
  $0
end
endsnippet

snippet class "cl" !
class ${1}
  $0
end
endsnippet

snippet mod "mod"
module ${1}
  $0
end
endsnippet

snippet module "mod" !
module ${1}
  $0
end
endsnippet

snippet ar "attr_reader" !
attr_reader :${1:attr_names}
endsnippet

snippet aw "attr_writter" !
attr_writer :${1:attr_names}
endsnippet

snippet aa "attr_accessor" !
attr_accessor :${1:attr_names}
endsnippet

snippet hash "hash.new"
Hash.new { |h, k| h[k] = ${1} }
endsnippet

snippet dow "dow"
downto(${1:0}) { |${2:n}| ${3} }
endsnippet

snippet ste "ste"
step(${1:2}) { |${2:n}| ${3} }
endsnippet

snippet tim "tim"
times { |${1:n}| ${2} }
endsnippet

snippet upt "upt"
upto(${1:1.0/0.0}) { |${2:n}| ${3} }
endsnippet

snippet loo "loo"
loop { ${1} }
endsnippet

snippet eawi "eawi"
each_with_index { |${1:e}, ${2:i}| ${3} }
endsnippet

snippet lam "lam"
lambda { |${1:args}| ${2} }
endsnippet

snippet -> "lambda"
lambda { ${1} }${0}
endsnippet

snippet do "do"
do |${1:variable}|
	$0
end
endsnippet

snippet : ":"
:${1:key} => ${2:"value"}$0
endsnippet

snippet nam "nam"
namespace :${1:`Filename()`} do
	$0
end
endsnippet

snippet { "{"
{ |${1}| }
endsnippet

snippet fex "fex"
File.expand_path(
endsnippet

snippet fx "File.expand_path"
File.expand_path(
endsnippet

snippet ./ "relative path"
File.expand_path('../${1}', __FILE__)${0}
endsnippet

snippet ../ "relative path"
File.expand_path('../../${1}', __FILE__)${0}
endsnippet

snippet fj "fj"
File.join(
endsnippet

snippet . "."
File.dirname(__FILE__)
endsnippet
