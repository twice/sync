snippet class "class name():"
class ${1:name}(${2:object}):
	$0
endsnippet

snippet init "__init__()"
def __init__(self$1):
	$0
endsnippet

snippet def "method defn"
def ${1:method}($2):
	$0
endsnippet

snippet defs "method defn"
def ${1:method}(self$2):
	$0
endsnippet

snippet deft "test method" !
def test_$1(self):
	""" ${2:doc} """
	$0
endsnippet

snippet def- "__meth__()"
def __${1:method}__(self$2):
	$0
endsnippet

snippet def_ "__meth__()"
def __${1:method}__(self$2):
	$0
endsnippet

snippet defc "class method"
@classmethod
def ${1:meth_name}(cls$2):
	$0
endsnippet

snippet try "try except" !
try:
	$1
except $2:
	$0
endsnippet

snippet : " dict key:value" !iw
'${1:key}' : ${0:value}
endsnippet

snippet ae "assertEquals" !iw
self.assertEquals(${1:actual}, ${2:expected})
endsnippet

snippet ac "assertContains" !
self.assertContains(${1:actual}, ${2:expected})
endsnippet

snippet aqse "assertQuerysetEquals" !
self.assertQuerysetEqual(${1:actual}, ${2:expected})
endsnippet

snippet classt "TestCase class" !
class ${1:something}Tests(TestCase):
	$0
endsnippet
